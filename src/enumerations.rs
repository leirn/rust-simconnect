
/// The SIMCONNECT_CLIENT_DATA_PERIOD pub enumeration type is used with the SimConnect_RequestClientData
///  call to specify how often data is to be sent to the client.
#[allow(non_camel_case_types)]
pub enum SIMCONNECT_CLIENT_DATA_PERIOD {
    SIMCONNECT_PERIOD_NEVER,
    SIMCONNECT_PERIOD_ONCE,
    SIMCONNECT_PERIOD_VISUAL_FRAME,
    SIMCONNECT_PERIOD_ON_SET,
    SIMCONNECT_PERIOD_SECOND,
}

/// The SIMCONNECT_DATATYPE pub enumeration type is used with the SimConnect_AddToDataDefinition
/// call to specify the data type that the server should use to return the specified data to the client.
#[allow(non_camel_case_types)]
pub enum SIMCONNECT_DATATYPE {
    SIMCONNECT_DATATYPE_INVALID,
    SIMCONNECT_DATATYPE_INT32,
    SIMCONNECT_DATATYPE_INT64,
    SIMCONNECT_DATATYPE_FLOAT32,
    SIMCONNECT_DATATYPE_FLOAT64,
    SIMCONNECT_DATATYPE_STRING8,
    SIMCONNECT_DATATYPE_STRING32,
    SIMCONNECT_DATATYPE_STRING64,
    SIMCONNECT_DATATYPE_STRING128,
    SIMCONNECT_DATATYPE_STRING256,
    SIMCONNECT_DATATYPE_STRING260,
    SIMCONNECT_DATATYPE_STRINGV,
    SIMCONNECT_DATATYPE_INITPOSITION,
    SIMCONNECT_DATATYPE_MARKERSTATE,
    SIMCONNECT_DATATYPE_WAYPOINT,
    SIMCONNECT_DATATYPE_LATLONALT,
    SIMCONNECT_DATATYPE_XYZ,
}

/// The SIMCONNECT_EXCEPTION pub enumeration type is used with the SIMCONNECT_RECV_EXCEPTION structure
///  to return information on an error that has occurred.
#[allow(non_camel_case_types)]
pub enum SIMCONNECT_EXCEPTION {
    SIMCONNECT_EXCEPTION_NONE = 0,
    SIMCONNECT_EXCEPTION_ERROR = 1,
    SIMCONNECT_EXCEPTION_SIZE_MISMATCH = 2,
    SIMCONNECT_EXCEPTION_UNRECOGNIZED_ID = 3,
    SIMCONNECT_EXCEPTION_UNOPENED = 4,
    SIMCONNECT_EXCEPTION_VERSION_MISMATCH = 5,
    SIMCONNECT_EXCEPTION_TOO_MANY_GROUPS = 6,
    SIMCONNECT_EXCEPTION_NAME_UNRECOGNIZED = 7,
    SIMCONNECT_EXCEPTION_TOO_MANY_EVENT_NAMES = 8,
    SIMCONNECT_EXCEPTION_EVENT_ID_DUPLICATE = 9,
    SIMCONNECT_EXCEPTION_TOO_MANY_MAPS = 10,
    SIMCONNECT_EXCEPTION_TOO_MANY_OBJECTS = 11,
    SIMCONNECT_EXCEPTION_TOO_MANY_REQUESTS = 12,
    SIMCONNECT_EXCEPTION_WEATHER_INVALID_PORT = 13,
    SIMCONNECT_EXCEPTION_WEATHER_INVALID_METAR = 14,
    SIMCONNECT_EXCEPTION_WEATHER_UNABLE_TO_GET_OBSERVATION = 15,
    SIMCONNECT_EXCEPTION_WEATHER_UNABLE_TO_CREATE_STATION = 16,
    SIMCONNECT_EXCEPTION_WEATHER_UNABLE_TO_REMOVE_STATION = 17,
    SIMCONNECT_EXCEPTION_INVALID_DATA_TYPE = 18,
    SIMCONNECT_EXCEPTION_INVALID_DATA_SIZE = 19,
    SIMCONNECT_EXCEPTION_DATA_ERROR = 20,
    SIMCONNECT_EXCEPTION_INVALID_ARRAY = 21,
    SIMCONNECT_EXCEPTION_CREATE_OBJECT_FAILED = 22,
    SIMCONNECT_EXCEPTION_LOAD_FLIGHTPLAN_FAILED = 23,
    SIMCONNECT_EXCEPTION_OPERATION_INVALID_FOR_OJBECT_TYPE = 24,
    SIMCONNECT_EXCEPTION_ILLEGAL_OPERATION = 25,
    SIMCONNECT_EXCEPTION_ALREADY_SUBSCRIBED = 26,
    SIMCONNECT_EXCEPTION_INVALID_pub = 27,
    SIMCONNECT_EXCEPTION_DEFINITION_ERROR = 28,
    SIMCONNECT_EXCEPTION_DUPLICATE_ID = 29,
    SIMCONNECT_EXCEPTION_DATUM_ID = 30,
    SIMCONNECT_EXCEPTION_OUT_OF_BOUNDS = 31,
    SIMCONNECT_EXCEPTION_ALREADY_CREATED = 32,
    SIMCONNECT_EXCEPTION_OBJECT_OUTSIDE_REALITY_BUBBLE = 33,
    SIMCONNECT_EXCEPTION_OBJECT_CONTAINER = 34,
    SIMCONNECT_EXCEPTION_OBJECT_AI = 35,
    SIMCONNECT_EXCEPTION_OBJECT_ATC = 36,
    SIMCONNECT_EXCEPTION_OBJECT_SCHEDULE = 37,
}

/// The SIMCONNECT_FACILITY_LIST_TYPE pub enumeration type is used to determine which type of facilities
/// data is being requested or returned.*
#[allow(non_camel_case_types)]
pub enum SIMCONNECT_FACILITY_LIST_TYPE {
    SIMCONNECT_FACILITY_LIST_TYPE_AIRPORT,
    SIMCONNECT_FACILITY_LIST_TYPE_WAYPOINT,
    SIMCONNECT_FACILITY_LIST_TYPE_NDB,
    SIMCONNECT_FACILITY_LIST_TYPE_VOR,
    SIMCONNECT_FACILITY_LIST_TYPE_COUNT,
}

/// The SIMCONNECT_EXCEPTION pub enumeration type is used to specify the three possible outcomes of a mission.
#[allow(non_camel_case_types)]
pub enum SIMCONNECT_MISSION_END {
    SIMCONNECT_MISSION_FAILED,
    SIMCONNECT_MISSION_CRASHED,
    SIMCONNECT_MISSION_SUCCEEDED,
}

/// The SIMCONNECT_PERIOD pub enumeration type is used with the SimConnect_RequestDataOnSimObject
///  call to specify how often data is to be sent to the client.
#[allow(non_camel_case_types)]
pub enum SIMCONNECT_PERIOD {
    SIMCONNECT_PERIOD_NEVER,
    SIMCONNECT_PERIOD_ONCE,
    SIMCONNECT_PERIOD_VISUAL_FRAME,
    SIMCONNECT_PERIOD_SIM_FRAME,
    SIMCONNECT_PERIOD_SECOND,
}

/// The SIMCONNECT_RECV_ID pub enumeration type is used within the SIMCONNECT_RECV structure
/// to indicate which type of structure has been returned.
#[allow(non_camel_case_types)]
pub enum SIMCONNECT_RECV_ID {
    SIMCONNECT_RECV_ID_NULL,
    SIMCONNECT_RECV_ID_EXCEPTION,
    SIMCONNECT_RECV_ID_OPEN,
    SIMCONNECT_RECV_ID_QUIT,
    SIMCONNECT_RECV_ID_EVENT,
    SIMCONNECT_RECV_ID_EVENT_OBJECT_ADDREMOVE,
    SIMCONNECT_RECV_ID_EVENT_FILENAME,
    SIMCONNECT_RECV_ID_EVENT_FRAME,
    SIMCONNECT_RECV_ID_SIMOBJECT_DATA,
    SIMCONNECT_RECV_ID_SIMOBJECT_DATA_BYTYPE,
    SIMCONNECT_RECV_ID_CLOUD_STATE,
    SIMCONNECT_RECV_ID_WEATHER_OBSERVATION,
    SIMCONNECT_RECV_ID_ASSIGNED_OJBECT_ID,
    SIMCONNECT_RECV_ID_RESERVED_KEY,
    SIMCONNECT_RECV_ID_CUSTOM_ACTION,
    SIMCONNECT_RECV_ID_SYSTEM_STATE,
    SIMCONNECT_RECV_ID_CLIENT_DATA,
    SIMCONNECT_RECV_ID_EVENT_WEATHER_MODE,
    SIMCONNECT_RECV_ID_AIRPORT_LIST,
    SIMCONNECT_RECV_ID_VOR_LIST,
    SIMCONNECT_RECV_ID_NDB_LIST,
    SIMCONNECT_RECV_ID_WAYPOINT_LIST,
    SIMCONNECT_RECV_ID_EVENT_MULTIPLAYER_SERVER_STARTED,
    SIMCONNECT_RECV_ID_EVENT_MULTIPLAYER_CLIENT_STARTED,
    SIMCONNECT_RECV_ID_EVENT_MULTIPLAYER_SESSION_ENDED,
    SIMCONNECT_RECV_ID_EVENT_RACE_END,
    SIMCONNECT_RECV_ID_EVENT_RACE_LAP,
}

///The SIMCONNECT_SIMOBJECT_TYPE pub enumeration type is used with the SimConnect_RequestDataOnSimObjectType
/// call to request information on specific or nearby objects.
#[allow(non_camel_case_types)]
pub enum SIMCONNECT_SIMOBJECT_TYPE {
    SIMCONNECT_SIMOBJECT_TYPE_USER,
    SIMCONNECT_SIMOBJECT_TYPE_ALL,
    SIMCONNECT_SIMOBJECT_TYPE_AIRCRAFT,
    SIMCONNECT_SIMOBJECT_TYPE_HELICOPTER,
    SIMCONNECT_SIMOBJECT_TYPE_BOAT,
    SIMCONNECT_SIMOBJECT_TYPE_GROUND,
}

/// The SIMCONNECT_STATE pub enumeration type is used with the SimConnect_SetSystemEventState
/// call to turn the reporting of events on and off.
#[allow(non_camel_case_types)]
pub enum SIMCONNECT_STATE {
    SIMCONNECT_STATE_OFF,
    SIMCONNECT_STATE_ON,
}

/// The SIMCONNECT_STATE pub enumeration type is used to specify which event has occurred Ã¹
/// as a result of a call to SimConnect_Text.
#[allow(non_camel_case_types)]
pub enum SIMCONNECT_TEXT_RESULT {
    SIMCONNECT_TEXT_RESULT_MENU_SELECT_1,
    SIMCONNECT_TEXT_RESULT_MENU_SELECT_2,
    SIMCONNECT_TEXT_RESULT_MENU_SELECT_3,
    SIMCONNECT_TEXT_RESULT_MENU_SELECT_4,
    SIMCONNECT_TEXT_RESULT_MENU_SELECT_5,
    SIMCONNECT_TEXT_RESULT_MENU_SELECT_6,
    SIMCONNECT_TEXT_RESULT_MENU_SELECT_7,
    SIMCONNECT_TEXT_RESULT_MENU_SELECT_8,
    SIMCONNECT_TEXT_RESULT_MENU_SELECT_9,
    SIMCONNECT_TEXT_RESULT_MENU_SELECT_10,
    SIMCONNECT_TEXT_RESULT_QUEUED,
    SIMCONNECT_TEXT_RESULT_REMOVED,
    SIMCONNECT_TEXT_RESULT_REPLACED,
    SIMCONNECT_TEXT_RESULT_TIMEOUT,
    SIMCONNECT_TEXT_RESULT_DISPLAYED = 0x00010000,
}

/// The SIMCONNECT_TEXT_TYPE pub enumeration type is used to specify which type of text is to be displayed by the SimConnect_Text function.

#[allow(non_camel_case_types)]
pub enum SIMCONNECT_TEXT_TYPE {
    SIMCONNECT_TEXT_TYPE_SCROLL_BLACK,
    SIMCONNECT_TEXT_TYPE_SCROLL_WHITE,
    SIMCONNECT_TEXT_TYPE_SCROLL_RED,
    SIMCONNECT_TEXT_TYPE_SCROLL_GREEN,
    SIMCONNECT_TEXT_TYPE_SCROLL_BLUE,
    SIMCONNECT_TEXT_TYPE_SCROLL_YELLOW,
    SIMCONNECT_TEXT_TYPE_SCROLL_MAGENTA,
    SIMCONNECT_TEXT_TYPE_SCROLL_CYAN,
    SIMCONNECT_TEXT_TYPE_PRINT_BLACK = 0x0100,
    SIMCONNECT_TEXT_TYPE_PRINT_WHITE,
    SIMCONNECT_TEXT_TYPE_PRINT_RED,
    SIMCONNECT_TEXT_TYPE_PRINT_GREEN,
    SIMCONNECT_TEXT_TYPE_PRINT_BLUE,
    SIMCONNECT_TEXT_TYPE_PRINT_YELLOW,
    SIMCONNECT_TEXT_TYPE_PRINT_MAGENTA,
    SIMCONNECT_TEXT_TYPE_PRINT_CYAN,
    SIMCONNECT_TEXT_TYPE_MENU = 0x0200,
}

/// The SIMCONNECT_WAYPOINT_FLAGS pub enumeration type is used with the
/// SIMCONNECT_DATA_WAYPOINT structure to define waypoints.
#[allow(non_camel_case_types)]
pub enum SIMCONNECT_cWAYPOINT_FLAGS {
    SIMCONNECT_WAYPOINT_SPEED_REQUESTED = 0x04,
    SIMCONNECT_WAYPOINT_THROTTLE_REQUESTED = 0x08,
    SIMCONNECT_WAYPOINT_COMPUTE_VERTICAL_SPEED = 0x10,
    SIMCONNECT_WAYPOINT_ALTITUDE_IS_AGL = 0x20,
    SIMCONNECT_WAYPOINT_ON_GROUND = 0x00100000,
    SIMCONNECT_WAYPOINT_REVERSE = 0x00200000,
    SIMCONNECT_WAYPOINT_WRAP_TO_FIRST = 0x00400000,
}
